<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);"
     aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@Title</h4>
                <button type="button" class="btn btn-danger close" @onclick="@ModalCancel">&times;</button>
            </div>
            <div class="modal-body">
                @if (FromComponent == "Delete")
                {
                    <p>¿Deseas eliminar el producto @Text?</p>
                } else
                {
                    <p>@Text</p>
                }

            </div>
            <div class="modal-footer">

                @if(FromComponent == "Add"){
                    <button type="button" class="btn btn-success" @onclick=@ModalOk>Registrar</button>
                }
                else if (FromComponent == "Update")
                {
                    <button type="button" class="btn btn-primary" @onclick=@ModalOk>Actualizar</button>
                }
                else if (FromComponent == "Delete")
                {
                    <button type="button" class="btn btn-danger" @onclick="@FuncionBotonModal">Eliminar</button>
                }
                else if (FromComponent == "Aceptar")
                {
                    <button type="button" class="btn btn-primary" @onclick="@FuncionBotonModal">Aceptar</button>
                }
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string Text { get; set; }

    [Parameter]
    public string FromComponent { get; set; }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    [Parameter]
    public EventCallback FuncionBoton { get; set; }


    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }

    private Task ModalOk()
    {
        return OnClose.InvokeAsync(true);
    }

    private Task FuncionBotonModal()
    {
        return FuncionBoton.InvokeAsync();
    }



}
